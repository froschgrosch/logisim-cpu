A 16 bit machine with better sorted opcodes and generally improved components. Use this instead of CPU1 if you can

Instructions:

NOP    0000 - Do nothing
DLOAD  0001 - Load the specified value into the a register
LOAD   0002 - Load the contents at the specified adress into the a register
STORE  0003 - Load the contents of the a register into the specified adress

DOUT   0004 - Directly output the a register
OUT    0005 - Output the contents of the given memory address
HALT   0006 - Halt the execution of the program


All ALU instructions set their ALU flags appropiately
ADD    0010 - Add the contents of the specified address to the a register
ADDI   0011 - Add the specified value to the a register

SUB    0012 - Subtract the contents of the specified address from the a register
SUBI   0013 - Subtract the specified value from the a register

MUL    0014 - Multiply the contents at the specified address with the a register
MULI   0015 - Multiply the specified value with the a register

DIV    0016 - Divide the a register over value at the specified address 
DIVI   0017 - Divide the a register over the specified address

MOD    0018 - Calculate the remainder of the contents at the specified address and the a register (a % b)
MODI   0019 - Calculate the remainder of the specified value and the a register


JMP    0020 - Unconditionally jump to the specified memory address

JZ     0021 - Jump if the zero flag is set (a is 0)
JNZ    0022 - Jump if the zero flag is not set

JN     0023 - Jump if the ALU negative flag is set
JNN    0024 - Jump if the ALU negative flag is not set
JO     0025 - Jump if the ALU overflow flag is set
JNO    0026 - Jump if the ALU overflow flag is not set


Control logic:

ALU Control Words

0000 - Nothing (NO output)
0001 - Add
0010 - Subtract
0011 - Multiply
0100 - Divide
0101 - Remainder / Modulo

ALU Flags 
01 - Overflow flag (for addition and multiplication)
10 - Negative flag

Register Zero flag (updates one clock cycle after write to register)
1 - A Register is 0

Jump control words

0000 - Nothing (dont jump)
0001 - Unconditonal

0010 - Jump if a is 0
0011 - Jump if a is not 0

0100 - Jump if negative flag is set
0101 - Jump if negative flag is not set
0110 - Jump if overflow flag is set
0111 - Jump if overflow flag is not set

Microcode: 

Fetch1-T0 - 0x000101 - Counter Out, MAR In
Fetch1-T1 - 0x000282 - Memory out, IR in, Counter Enable

Fetch2-T2 - 0x000101 - Counter Out, MAR in
Fetch2-T3 - 0x000482 - Memory Out, IDR in, Counter Enable


NOP-T2 - 0x001000 - Instr. reset

DLOAD-T4 - 0x001804 - IDR out, A in, Instr. reset

LOAD-T4 - 0x000900 - IDR out, MAR in
LOAD-T5 - 0x001084 - Memory out, A in, Instr. reset

STORE-T4 - 0x000900 - IDR out, MAR in
STORE-T5 - 0x001048 - A out, Memory in, Instr. reset

DOUT-T3 0x005008 - A out, output in, Instr. reset

OUT-T5 - 0x000900 - IDR out, MAR in
OUT-T6 - 0x005040 - Memory out, output in, Instr. reset

HLT-T3 - 0x002000 - Halt

ADD-T4 - 0x000900 - IDR out, MAR in
ADD-T5 - 0x000090 - Memory out, B in
ADD-T6 - 0x101004 - ALU 0001, A in, Instr. reset

ADDI-T4 - 0x000810 - IDR out, B in
ADDI-T5 - 0x101004 - ALU 0001, A in, Instr. reset

SUB-T4 - 0x000900 - IDR out, MAR in
SUB-T5 - 0x000090 - Memory out, B in
SUB-T6 - 0x201004 - ALU 0010, A in, Instr. reset

SUBI-T4 - 0x000810 - IDR out, B in
SUBI-T5 - 0x201004 - ALU 0010, A in, Instr. reset

MUL-T4 - 0x000900 - IDR out, MAR in
MUL-T5 - 0x000090 - Memory out, B in
MUL-T6 - 0x301004 - ALU 0011, A in, Instr. reset

MULI-T4 - 0x000810 - IDR out, B in
MULI-T5 - 0x301004 - ALU 0011, A in, Instr. reset

DIV-T4 - 0x000900 - IDR out, MAR in
DIV-T5 - 0x000090 - Memory out, B in
DIV-T6 - 0x401004 - ALU 0100, A in, Instr. reset

DIVI-T4 - 0x000810 - IDR out, B in
DIVI-T5 - 0x401004 - ALU 0100, A in, Instr. reset

MOD-T4 - 0x000900 - IDR out, MAR in
MOD-T5 - 0x000090 - Memory out, B in
MOD-T6 - 0x501004 - ALU 0101, A in, Instr. reset

MODI-T4 - 0x000810 - IDR out, B in
MODI-T5 - 0x501004 - ALU 0101, A in, Instr. reset


JMP-T5 - 0x181800 - Jump on, IDR out, JMP_CW 0001, Instr. reset
JZ-T5  - 0x281800 - Jump on, IDR out, JMP_CW 0010, Instr. reset
JNZ-T5 - 0x381800 - Jump on, IDR out, JMP_CW 0011, Instr. reset

JN-T5  - 0x481800 - Jump on, IDR out, JMP_CW 0100, Instr. reset
JNN-T5 - 0x581800 - Jump on, IDR out, JMP_CW 0101, Instr. reset
JO-T5  - 0x681800 - Jump on, IDR out, JMP_CW 0110, Instr. reset
JNO-T5 - 0x781800 - Jump on, IDR out, JMP_CW 0111, Instr. reset